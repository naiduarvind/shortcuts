{"remainingRequest":"/Users/anaidu/Desktop/commonshortcuts/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anaidu/Desktop/commonshortcuts/src/components/Shortcuts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anaidu/Desktop/commonshortcuts/src/components/Shortcuts.vue","mtime":1596616995447},{"path":"/Users/anaidu/Desktop/commonshortcuts/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/anaidu/Desktop/commonshortcuts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anaidu/Desktop/commonshortcuts/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Card from \"@/components/Shortcuts/Card.vue\";\n\nexport default {\n  name: \"Shortcuts\",\n  props: {},\n  data: function() {\n    return {};\n  },\n  components: {\n    Card\n  },\n  computed: {\n    showMenu: function() {\n      return screen.width > 628 ? true : false;\n    },\n    search: function() {\n      return this.$store.state.search;\n    },\n    shortcuts: function() {\n      return this.$store.state.shortcuts;\n    },\n    software: function() {\n      return this.$store.state.software;\n    },\n    tab: function() {\n      return this.$store.state.tab;\n    },\n    collapse: function() {\n      return this.$store.state.collapse;\n    },\n    bookmarks: function() {\n      return this.$store.state.bookmarks;\n    },\n    platform: function() {\n      return this.$store.state.platform;\n    },\n    group: function() {\n      let software = this.software;\n      let shortcuts = this.shortcuts[software];\n\n      var uniqueArray = arrArg => {\n        return arrArg.filter((elem, pos, arr) => {\n          return arr.indexOf(elem) == pos;\n        });\n      };\n\n      let category = uniqueArray(\n        shortcuts.map(x => {\n          return x.category;\n        })\n      );\n      return category;\n    }\n  },\n  methods: {\n    ucfirst: function(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    viewCollapse: function(category) {\n      let software = this.software;\n      let collapse = this.collapse;\n      let check = this.collapse[software].includes(category);\n      if (check) {\n        collapse[software] = collapse[software].filter(x => x !== category);\n      } else {\n        collapse[software] = collapse[software].concat(category);\n      }\n\n      this.$store.dispatch(\"save\", { key: \"collapse\", data: collapse });\n    },\n    classCollapse: function(category) {\n      let software = this.software;\n      let check = this.collapse[software].includes(category);\n      return check ? false : true;\n    },\n    filteredShortcuts: function(category) {\n      let self = this;\n      let platform = this.platform;\n      let { software, tab, bookmarks, shortcuts } = this;\n      let bucket =\n        this.tab === \"shortcuts\"\n          ? this.shortcuts[software]\n          : this.bookmarks[software];\n      let search = self.search.split(\" \");\n\n      function queryCheck(query) {\n        let check = true;\n        search.forEach(x => {\n          if (check === true) {\n            check = query.description.toLowerCase().includes(x.toLowerCase());\n          }\n        });\n        return check;\n      }\n\n      let final = bucket.filter(x => {\n        return (\n          queryCheck(x) && x.category === category && x.shortcut.length !== 0\n        );\n      });\n\n      return final;\n    },\n    bookmark: function(id, category) {\n      let software = this.software;\n      let bookmarks = this.bookmarks;\n      let data = this.shortcuts[software].filter(x => x.id === id)[0];\n      let check =\n        bookmarks[software].filter(x => x.id === data.id).length === 0;\n\n      if (check) {\n        bookmarks[software] = bookmarks[software].concat(data);\n      } else {\n        bookmarks[software] = bookmarks[software].filter(x => x.id !== data.id);\n      }\n\n      this.$store.dispatch(\"save\", { key: \"bookmarks\", data: bookmarks });\n    },\n    bookmarkStar: function(id, category) {\n      let software = this.software;\n      if (this.tab === \"shortcuts\") {\n        let data = this.shortcuts[software].filter(x => x.id === id)[0];\n        let check =\n          this.bookmarks[software].filter(x => x.id === data.id).length === 0;\n        return check ? \"fa fa-star-o bookmark\" : \"fa fa-star bookmark-selected\";\n      }\n      return \"fa fa-star bookmark-selected\";\n    },\n    keyClass: function(type) {\n      return type === \"symbol\" ? \"symbol\" : \"operator\";\n    }\n  }\n};\n",{"version":3,"sources":["Shortcuts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Shortcuts.vue","sourceRoot":"src/components","sourcesContent":["<style scoped lang=\"scss\">\n.width-100 {\n  width: 100%;\n}\n.width-90 {\n  flex: 0 0 90%;\n  max-width: 90%;\n}\n.shortcuts {\n  max-width: 800px;\n  width: 100%;\n  // max-width: 1150px;\n  // width: 100%;\n  height: 100% !important;\n  // margin-top: 150px;\n  position: relative;\n}\n.shortcuts__container {\n  padding-top: 150px;\n  margin-bottom: -100px;\n  // margin-top: -50px;\n}\n// @media only screen and (max-width: 600px) {\n//   .shortcuts {\n//     margin-top: 100px;\n//   }\n// }\n\n@media only screen and (max-width: 600px) {\n  .shortcuts {\n    margin-top: 0px;\n  }\n  .shortcuts__container {\n    padding-top: 100px;\n    margin-bottom: -100px;\n  }\n}\n\n.category {\n  color: #a0a0a0; //Four\n  padding: 3px 10px;\n  font-size: 12px;\n  cursor: pointer;\n  width: 100%;\n  border-radius: 2px;\n  margin-bottom: 0px;\n  a {\n    color: #a0a0a0; //Four\n  }\n  &:hover {\n    // background: #e8e7e4; //Three\n    background: #e8e8e8; //Three\n  }\n}\n\n.pr-10 {\n  padding-right: 10px;\n}\n\n.text {\n  padding-top: 150px;\n  color: #a0a0a0; //Four\n  font-size: 14px;\n}\n</style>\n\n\n<template>\n  <div class=\"shortcuts width-100 d-flex flex-row row\">\n    <div class=\"col-md-12\">\n      <p\n        class=\"text\"\n        v-if=\"bookmarks[software].length === 0 && tab === 'bookmarks'\"\n      >You have not bookmarked any shortcuts yet. Click the All Shortcuts tab on the menubar on the left to view and add shortcuts you need :)</p>\n\n      <div\n        v-for=\"(category, categoryIn) in group\"\n        :key=\"categoryIn\"\n        class=\"mb-30 shortcuts__container\"\n        :id=\"'cat'+categoryIn\"\n        v-show=\"filteredShortcuts(category).length !== 0\"\n      >\n        <p class=\"text-left pointer\" @click=\"viewCollapse(category)\">\n          <b>\n            {{ category }}\n            <i\n              :class=\"classCollapse(category) ? 'fa fa-caret-down' : 'fa fa-caret-up'\"\n              aria-hidden=\"true\"\n            ></i>\n          </b>\n        </p>\n        <Card :category=\"category\"/>\n      </div>\n    </div>\n    <!-- <div class=\"col-md-2\">\n      <div class=\"position-fixed pr-10\" v-show=\"showMenu\">\n        <p v-for=\"(category, categoryIn) in group\" :key=\"categoryIn\" class=\"category\">\n          <a :href=\"'#'+categoryIn\">{{category}}</a>\n        </p>\n      </div>\n    </div>-->\n  </div>\n</template>\n\n<script>\nimport Card from \"@/components/Shortcuts/Card.vue\";\n\nexport default {\n  name: \"Shortcuts\",\n  props: {},\n  data: function() {\n    return {};\n  },\n  components: {\n    Card\n  },\n  computed: {\n    showMenu: function() {\n      return screen.width > 628 ? true : false;\n    },\n    search: function() {\n      return this.$store.state.search;\n    },\n    shortcuts: function() {\n      return this.$store.state.shortcuts;\n    },\n    software: function() {\n      return this.$store.state.software;\n    },\n    tab: function() {\n      return this.$store.state.tab;\n    },\n    collapse: function() {\n      return this.$store.state.collapse;\n    },\n    bookmarks: function() {\n      return this.$store.state.bookmarks;\n    },\n    platform: function() {\n      return this.$store.state.platform;\n    },\n    group: function() {\n      let software = this.software;\n      let shortcuts = this.shortcuts[software];\n\n      var uniqueArray = arrArg => {\n        return arrArg.filter((elem, pos, arr) => {\n          return arr.indexOf(elem) == pos;\n        });\n      };\n\n      let category = uniqueArray(\n        shortcuts.map(x => {\n          return x.category;\n        })\n      );\n      return category;\n    }\n  },\n  methods: {\n    ucfirst: function(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    viewCollapse: function(category) {\n      let software = this.software;\n      let collapse = this.collapse;\n      let check = this.collapse[software].includes(category);\n      if (check) {\n        collapse[software] = collapse[software].filter(x => x !== category);\n      } else {\n        collapse[software] = collapse[software].concat(category);\n      }\n\n      this.$store.dispatch(\"save\", { key: \"collapse\", data: collapse });\n    },\n    classCollapse: function(category) {\n      let software = this.software;\n      let check = this.collapse[software].includes(category);\n      return check ? false : true;\n    },\n    filteredShortcuts: function(category) {\n      let self = this;\n      let platform = this.platform;\n      let { software, tab, bookmarks, shortcuts } = this;\n      let bucket =\n        this.tab === \"shortcuts\"\n          ? this.shortcuts[software]\n          : this.bookmarks[software];\n      let search = self.search.split(\" \");\n\n      function queryCheck(query) {\n        let check = true;\n        search.forEach(x => {\n          if (check === true) {\n            check = query.description.toLowerCase().includes(x.toLowerCase());\n          }\n        });\n        return check;\n      }\n\n      let final = bucket.filter(x => {\n        return (\n          queryCheck(x) && x.category === category && x.shortcut.length !== 0\n        );\n      });\n\n      return final;\n    },\n    bookmark: function(id, category) {\n      let software = this.software;\n      let bookmarks = this.bookmarks;\n      let data = this.shortcuts[software].filter(x => x.id === id)[0];\n      let check =\n        bookmarks[software].filter(x => x.id === data.id).length === 0;\n\n      if (check) {\n        bookmarks[software] = bookmarks[software].concat(data);\n      } else {\n        bookmarks[software] = bookmarks[software].filter(x => x.id !== data.id);\n      }\n\n      this.$store.dispatch(\"save\", { key: \"bookmarks\", data: bookmarks });\n    },\n    bookmarkStar: function(id, category) {\n      let software = this.software;\n      if (this.tab === \"shortcuts\") {\n        let data = this.shortcuts[software].filter(x => x.id === id)[0];\n        let check =\n          this.bookmarks[software].filter(x => x.id === data.id).length === 0;\n        return check ? \"fa fa-star-o bookmark\" : \"fa fa-star bookmark-selected\";\n      }\n      return \"fa fa-star bookmark-selected\";\n    },\n    keyClass: function(type) {\n      return type === \"symbol\" ? \"symbol\" : \"operator\";\n    }\n  }\n};\n</script>"]}]}